#!/usr/bin/env python3
import sys
from collections import deque

def solve(N: int, K: int, A: "List[int]"):
    sorted_A = deque(sorted(A))
    flag = True
    ans = 0

    while flag and sorted_A:
        a = sorted_A.popleft()
        if a > ans:
            flag = False
        elif a == ans:
            ans += 1
    
    print(min(K, ans))
    
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, K, A)

if __name__ == '__main__':
    main()
